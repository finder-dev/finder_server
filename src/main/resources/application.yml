server:
#  port: 8080
  port: 8081
  servlet:
    context-path: /

spring:
  mail:
    host: smtp.gmail.com
    port: 587
    username: ENC(17+925ueQRcYNwllPFp/h0M3pJMT5wtgQxj34rk9KUo=)
    password: ENC(lf/LJBsc0lPkUX0Y9YbfQTjifUxi+NdNw3BOIbMmgtc=)
    properties:
      mail:
        smtp:
          port: 465
          auth: true
          starttls:
            required: true
            enable: true
          socketFactory:
            class: javax.net.ssl.SSLSocketFactory
            fallback: false
            port: 465
  datasource:
#    url: jdbc:mysql://springboot-db2.cvqrxyomkoch.ap-northeast-2.rds.amazonaws.com:3306/mydb
#    url: ENC(NFjs2fL+kacpK4NiY8OJo1VO9pEA+LjJYbPtdTIcrbKAjfTAMjmorNByeOkPYZB9ygAksX5Uuava17WneHsYncMyVNmKyZ2J96m3y3f5NvbkwxxbCcHztq1QwXa4qLPv)
#    username: ENC(x9JT7KRP87tq9DxLC1Yf7g==)
#    password: ENC(97S/vqWIMLuAyJL4PutGI8GmTsInGsBl)
    url: jdbc:h2:tcp://localhost/~/jpashop
#        url: ENC(/BtZqQvoCF1ULgVI5u8fij1nZqTvE4lKIt/LZ0nU/umwl9PJe3TI8pBAPnM2eDE0)
    username: sa
    password:
    driver-class-name: org.h2.Driver
  #    schema: classpath*:/schema.sql
  #    data: classpath*:/data.sql
  #    initialization-mode: always

  jpa:
    show-sql: true  # sql 출력
    open-in-view: false
#    defer-datasource-initialization: true
#    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create
      properties:
        hibernate:
          format_sql : true # sql 예쁘게 출력
          default_batch_fetch_size: 1000

  servlet:
    multipart:
      max-file-size: 10MB # 파일 업로드 요청 시 하나의 파일 크기 10MB로 제한
      max-request-size: 100MB # 파일 업로드 요청 시 모든 파일의 크기의합 100MB로 제한
  redis:
    host: 127.0.0.1
    port: 6379

kakao:
  redirect: http://localhost:8080/auth/kakao/callback
  client:
    id: d5435649f10d74a354a9f02d17af6bdc
    secret: F2Yck6vsuPADPS6mxsEFaq2vlAPl6fjV
  url:

    login: https://kauth.kakao.com/oauth/authorize
    token: https://kauth.kakao.com/oauth/token
    profile: https://kapi.kakao.com/v2/user/me
    unlink: https://kapi.kakao.com/v1/user/unlink

jasypt:
  encryptor:
    bean: jasyptStringEncryptor
    password: ${JASYPT_PASSWORD}

file:
  upload:
    path: /C:/Users/dudwl/temp/

token:
  secret: jwt-token-secret # todo 자신의 jwt token secret키 입력
  access-token-expiration-time: 900000  # 15분
  refresh-token-expiration-time: 1210500000 # 2주

cloud:
  aws:
    s3:
      bucket: ENC(BwxzMdaRgg/FmGsQOenTojVRUhBfjU1vmS3V4vEEV2k=)
    credentials:
      access-key: ENC(ZmyuYQmZw+8ptwqC+B6sLcaU+M3h0NMlwDmiR0tfTes=)
      secret-key: ENC(uhO98PMVUKNS9WB3s5XYarwG4DCQZEGlNkA6raXKZTFtjJZzMWlWnTumnPET2G+uICjQ4IpBGM0=)
    region:
      static: ap-northeast-2
    stack:
      auto: false

s3:
  users:
    path: /users
    default: default.png
  qna:
    path: /qna

